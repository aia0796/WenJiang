{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/game/HangmanGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Timer, Wallet, Award } from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\n\nconst words = ['JAVASCRIPT', 'REACT', 'BLOCKCHAIN', 'CRYPTO', 'GAMING'];\n\nconst HangmanGame = () => {\n  const [word, setWord] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState(new Set());\n  const [mistakes, setMistakes] = useState(0);\n  const [gameState, setGameState] = useState('playing'); // 'playing', 'won', 'lost'\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [tokens, setTokens] = useState(0);\n  const [showClaim, setShowClaim] = useState(false);\n  const [account, setAccount] = useState('');\n\n\n  // Initialize game\n  useEffect(() => {\n    startNewGame();\n  }, []);\n\n  // Timer effect\n  useEffect(() => {\n    let timer;\n    if (gameState === 'playing') {\n      timer = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [gameState]);\n\n  // Keyboard input handler effect\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      if (gameState !== 'playing') return;\n      \n      const key = event.key.toUpperCase();\n      // Check if the pressed key is a letter and hasn't been guessed yet\n      if (/^[A-Z]$/.test(key) && !guessedLetters.has(key)) {\n        handleGuess(key);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener('keydown', handleKeyPress);\n\n    // Cleanup function to remove event listener\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [gameState, guessedLetters, word]); // Dependencies for the effect\n\n  const startNewGame = () => {\n    const randomWord = words[Math.floor(Math.random() * words.length)];\n    setWord(randomWord);\n    setGuessedLetters(new Set());\n    setMistakes(0);\n    setGameState('playing');\n    setTimeElapsed(0);\n    setShowClaim(false);\n  };\n\n  const calculateTokens = () => {\n    // Base tokens for winning\n    let baseTokens = 100;\n    // Bonus tokens for speed (more tokens for faster completion)\n    const speedBonus = Math.max(0, 300 - timeElapsed);\n    // Penalty for mistakes\n    const mistakePenalty = mistakes * 10;\n    \n    return Math.max(0, baseTokens + speedBonus - mistakePenalty);\n  };\n\n  const handleGuess = (letter) => {\n    if (gameState !== 'playing') return;\n\n    const newGuessedLetters = new Set(guessedLetters);\n    newGuessedLetters.add(letter);\n    setGuessedLetters(newGuessedLetters);\n\n    if (!word.includes(letter)) {\n      const newMistakes = mistakes + 1;\n      setMistakes(newMistakes);\n      if (newMistakes >= 6) {\n        setGameState('lost');\n      }\n    }\n\n    // Check for win\n    const wordArray = word.split('');\n    if (wordArray.every(letter => newGuessedLetters.has(letter))) {\n      setGameState('won');\n      setTokens(calculateTokens());\n      setShowClaim(true);\n    }\n  };\n\n  const getMaskedWord = () => {\n    return word\n      .split('')\n      .map(letter => guessedLetters.has(letter) ? letter : '_')\n      .join(' ');\n  };\n\n  const handleClaim = () => {\n    withdraw();\n    alert(`Claimed ${tokens} tokens!`);\n    setShowClaim(false);\n  };\n\n  const withdraw = async () =>{\n    const {abi} = contractAbi;\n    \n    const provider = new BrowserProvider(window.ethereum);\n\n    const signer = await provider.getSigner();\n    const address = await signer.getAddress();\n    const bounceContract = new ethers.Contract(contractAddress.address, abi, signer)\n\n    await (await bounceContract.mint(address, ethers.parseUnits(tokens.toString(), 18))).wait();\n  }\n\n  const connectWallet = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setAccount(accounts[0]);\n      } else {\n        alert('Please install MetaMask!');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Generate keyboard\n  const keyboard = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('').map(letter => (\n    <button\n      key={letter}\n      onClick={() => handleGuess(letter)}\n      disabled={guessedLetters.has(letter) || gameState !== 'playing'}\n      className={`m-1 p-2 rounded ${\n        guessedLetters.has(letter)\n          ? 'bg-gray-300'\n          : 'bg-blue-500 hover:bg-blue-600 text-white'\n      } transition-all duration-200 transform hover:scale-105`}\n    >\n      {letter}\n    </button>\n  ));\n\n  // Hangman figure (simplified animation states)\n  const hangmanStates = [\n    'O',      // Head\n    '|',      // Body\n    '/',      // Left arm\n    '\\\\',     // Right arm\n    '/',      // Left leg\n    '\\\\',     // Right leg\n  ].slice(0, mistakes);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-8\">\n        <div className=\"text-2xl font-bold text-blue-600\">Hangman Game</div>\n        <div className=\"flex gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Timer className=\"text-gray-600\" />\n            <span>{timeElapsed}s</span>\n          </div>\n          <button className=\"flex items-center gap-2 bg-purple-500 text-white px-4 py-2 rounded\" onClick={connectWallet}>\n            <Wallet />\n            {account ? `${account.slice(0, 6)}...${account.slice(-4)}` : 'Connect Wallet'}\n          </button>\n        </div>\n      </div>\n\n      {/* Game Container */}\n      <div className=\"max-w-4xl mx-auto bg-white rounded-lg shadow-lg p-8\">\n        {/* Instructions */}\n        <div className=\"text-center text-gray-600 mb-4\">\n          Type any letter on your keyboard or click the buttons below to guess\n        </div>\n\n        {/* Hangman Figure */}\n        <div className=\"text-center mb-8 font-mono text-4xl space-y-2\">\n          {hangmanStates.map((part, index) => (\n            <div\n              key={index}\n              className=\"animate-bounce-in\"\n              style={{\n                animationDelay: `${index * 0.2}s`\n              }}\n            >\n              {part}\n            </div>\n          ))}\n        </div>\n\n        {/* Word Display */}\n        <div className=\"text-4xl text-center font-mono mb-8\">\n          {getMaskedWord()}\n        </div>\n\n        {/* Keyboard */}\n        <div className=\"flex flex-wrap justify-center gap-1 mb-8\">\n          {keyboard}\n        </div>\n\n        {/* Game Status */}\n        {gameState !== 'playing' && (\n          <Alert className=\"mb-4\">\n            <AlertDescription>\n              {gameState === 'won' \n                ? `Congratulations! You won in ${timeElapsed} seconds!` \n                : 'Game Over! Try again!'}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {/* Claim Button */}\n        {showClaim && (\n          <div className=\"text-center\">\n            <button\n              onClick={handleClaim}\n              className=\"flex items-center gap-2 mx-auto bg-green-500 text-white px-6 py-3 rounded-lg text-lg hover:bg-green-600 transition-colors\"\n            >\n              <Award />\n              Claim {tokens} Tokens\n            </button>\n          </div>\n        )}\n\n        {/* New Game Button */}\n        <button\n          onClick={startNewGame}\n          className=\"mt-4 bg-blue-500 text-white px-6 py-2 rounded-lg mx-auto block hover:bg-blue-600 transition-colors\"\n        >\n          New Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HangmanGame;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/page.tsx"],"sourcesContent":["\"use client\"\nimport HangmanGame from '../components/game/HangmanGame';\n\nexport default function Home() {\n  return (\n    <main>\n      <HangmanGame />\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBACE,8OAAC;kBACC,cAAA,8OAAC,yIAAA,CAAA,UAAW;;;;;;;;;;AAGlB"}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}